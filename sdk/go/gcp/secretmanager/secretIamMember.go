// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package secretmanager

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecretIamMember struct {
	pulumi.CustomResourceState

	Condition SecretIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag pulumi.StringOutput `pulumi:"etag"`
	Member pulumi.StringOutput `pulumi:"member"`
	Project pulumi.StringOutput `pulumi:"project"`
	Role pulumi.StringOutput `pulumi:"role"`
	SecretId pulumi.StringOutput `pulumi:"secretId"`
}

// NewSecretIamMember registers a new resource with the given unique name, arguments, and options.
func NewSecretIamMember(ctx *pulumi.Context,
	name string, args *SecretIamMemberArgs, opts ...pulumi.ResourceOption) (*SecretIamMember, error) {
	if args == nil || args.Member == nil {
		return nil, errors.New("missing required argument 'Member'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil || args.SecretId == nil {
		return nil, errors.New("missing required argument 'SecretId'")
	}
	if args == nil {
		args = &SecretIamMemberArgs{}
	}
	var resource SecretIamMember
	err := ctx.RegisterResource("gcp:secretmanager/secretIamMember:SecretIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretIamMember gets an existing SecretIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretIamMemberState, opts ...pulumi.ResourceOption) (*SecretIamMember, error) {
	var resource SecretIamMember
	err := ctx.ReadResource("gcp:secretmanager/secretIamMember:SecretIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretIamMember resources.
type secretIamMemberState struct {
	Condition *SecretIamMemberCondition `pulumi:"condition"`
	Etag *string `pulumi:"etag"`
	Member *string `pulumi:"member"`
	Project *string `pulumi:"project"`
	Role *string `pulumi:"role"`
	SecretId *string `pulumi:"secretId"`
}

type SecretIamMemberState struct {
	Condition SecretIamMemberConditionPtrInput
	Etag pulumi.StringPtrInput
	Member pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	Role pulumi.StringPtrInput
	SecretId pulumi.StringPtrInput
}

func (SecretIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretIamMemberState)(nil)).Elem()
}

type secretIamMemberArgs struct {
	Condition *SecretIamMemberCondition `pulumi:"condition"`
	Member string `pulumi:"member"`
	Project *string `pulumi:"project"`
	Role string `pulumi:"role"`
	SecretId string `pulumi:"secretId"`
}

// The set of arguments for constructing a SecretIamMember resource.
type SecretIamMemberArgs struct {
	Condition SecretIamMemberConditionPtrInput
	Member pulumi.StringInput
	Project pulumi.StringPtrInput
	Role pulumi.StringInput
	SecretId pulumi.StringInput
}

func (SecretIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretIamMemberArgs)(nil)).Elem()
}

