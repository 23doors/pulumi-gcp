// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package secretmanager

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecretIamBinding struct {
	pulumi.CustomResourceState

	Condition SecretIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag pulumi.StringOutput `pulumi:"etag"`
	Members pulumi.StringArrayOutput `pulumi:"members"`
	Project pulumi.StringOutput `pulumi:"project"`
	Role pulumi.StringOutput `pulumi:"role"`
	SecretId pulumi.StringOutput `pulumi:"secretId"`
}

// NewSecretIamBinding registers a new resource with the given unique name, arguments, and options.
func NewSecretIamBinding(ctx *pulumi.Context,
	name string, args *SecretIamBindingArgs, opts ...pulumi.ResourceOption) (*SecretIamBinding, error) {
	if args == nil || args.Members == nil {
		return nil, errors.New("missing required argument 'Members'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil || args.SecretId == nil {
		return nil, errors.New("missing required argument 'SecretId'")
	}
	if args == nil {
		args = &SecretIamBindingArgs{}
	}
	var resource SecretIamBinding
	err := ctx.RegisterResource("gcp:secretmanager/secretIamBinding:SecretIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretIamBinding gets an existing SecretIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretIamBindingState, opts ...pulumi.ResourceOption) (*SecretIamBinding, error) {
	var resource SecretIamBinding
	err := ctx.ReadResource("gcp:secretmanager/secretIamBinding:SecretIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretIamBinding resources.
type secretIamBindingState struct {
	Condition *SecretIamBindingCondition `pulumi:"condition"`
	Etag *string `pulumi:"etag"`
	Members []string `pulumi:"members"`
	Project *string `pulumi:"project"`
	Role *string `pulumi:"role"`
	SecretId *string `pulumi:"secretId"`
}

type SecretIamBindingState struct {
	Condition SecretIamBindingConditionPtrInput
	Etag pulumi.StringPtrInput
	Members pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	Role pulumi.StringPtrInput
	SecretId pulumi.StringPtrInput
}

func (SecretIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretIamBindingState)(nil)).Elem()
}

type secretIamBindingArgs struct {
	Condition *SecretIamBindingCondition `pulumi:"condition"`
	Members []string `pulumi:"members"`
	Project *string `pulumi:"project"`
	Role string `pulumi:"role"`
	SecretId string `pulumi:"secretId"`
}

// The set of arguments for constructing a SecretIamBinding resource.
type SecretIamBindingArgs struct {
	Condition SecretIamBindingConditionPtrInput
	Members pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	Role pulumi.StringInput
	SecretId pulumi.StringInput
}

func (SecretIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretIamBindingArgs)(nil)).Elem()
}

