// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appengine

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/app_engine_standard_app_version.html.markdown.
type StandardAppVersion struct {
	s *pulumi.ResourceState
}

// NewStandardAppVersion registers a new resource with the given unique name, arguments, and options.
func NewStandardAppVersion(ctx *pulumi.Context,
	name string, args *StandardAppVersionArgs, opts ...pulumi.ResourceOpt) (*StandardAppVersion, error) {
	if args == nil || args.Runtime == nil {
		return nil, errors.New("missing required argument 'Runtime'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["deleteServiceOnDestroy"] = nil
		inputs["deployment"] = nil
		inputs["entrypoint"] = nil
		inputs["envVariables"] = nil
		inputs["handlers"] = nil
		inputs["instanceClass"] = nil
		inputs["libraries"] = nil
		inputs["noopOnDestroy"] = nil
		inputs["project"] = nil
		inputs["runtime"] = nil
		inputs["runtimeApiVersion"] = nil
		inputs["service"] = nil
		inputs["threadsafe"] = nil
		inputs["versionId"] = nil
	} else {
		inputs["deleteServiceOnDestroy"] = args.DeleteServiceOnDestroy
		inputs["deployment"] = args.Deployment
		inputs["entrypoint"] = args.Entrypoint
		inputs["envVariables"] = args.EnvVariables
		inputs["handlers"] = args.Handlers
		inputs["instanceClass"] = args.InstanceClass
		inputs["libraries"] = args.Libraries
		inputs["noopOnDestroy"] = args.NoopOnDestroy
		inputs["project"] = args.Project
		inputs["runtime"] = args.Runtime
		inputs["runtimeApiVersion"] = args.RuntimeApiVersion
		inputs["service"] = args.Service
		inputs["threadsafe"] = args.Threadsafe
		inputs["versionId"] = args.VersionId
	}
	inputs["name"] = nil
	s, err := ctx.RegisterResource("gcp:appengine/standardAppVersion:StandardAppVersion", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &StandardAppVersion{s: s}, nil
}

// GetStandardAppVersion gets an existing StandardAppVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardAppVersion(ctx *pulumi.Context,
	name string, id pulumi.ID, state *StandardAppVersionState, opts ...pulumi.ResourceOpt) (*StandardAppVersion, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["deleteServiceOnDestroy"] = state.DeleteServiceOnDestroy
		inputs["deployment"] = state.Deployment
		inputs["entrypoint"] = state.Entrypoint
		inputs["envVariables"] = state.EnvVariables
		inputs["handlers"] = state.Handlers
		inputs["instanceClass"] = state.InstanceClass
		inputs["libraries"] = state.Libraries
		inputs["name"] = state.Name
		inputs["noopOnDestroy"] = state.NoopOnDestroy
		inputs["project"] = state.Project
		inputs["runtime"] = state.Runtime
		inputs["runtimeApiVersion"] = state.RuntimeApiVersion
		inputs["service"] = state.Service
		inputs["threadsafe"] = state.Threadsafe
		inputs["versionId"] = state.VersionId
	}
	s, err := ctx.ReadResource("gcp:appengine/standardAppVersion:StandardAppVersion", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &StandardAppVersion{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *StandardAppVersion) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *StandardAppVersion) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// If set to `true`, the service will be deleted if it is the last version.    
func (r *StandardAppVersion) DeleteServiceOnDestroy() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["deleteServiceOnDestroy"])
}

// Code and application artifacts that make up this version.
func (r *StandardAppVersion) Deployment() *pulumi.Output {
	return r.s.State["deployment"]
}

// The entrypoint for the application.
func (r *StandardAppVersion) Entrypoint() *pulumi.Output {
	return r.s.State["entrypoint"]
}

// Environment variables available to the application.
func (r *StandardAppVersion) EnvVariables() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["envVariables"])
}

// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
// request and other request handlers are not attempted.
func (r *StandardAppVersion) Handlers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["handlers"])
}

// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
// AutomaticScaling is supported at the moment)
func (r *StandardAppVersion) InstanceClass() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceClass"])
}

// Configuration for third-party Python runtime libraries that are required by the application.
func (r *StandardAppVersion) Libraries() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["libraries"])
}

// Full path to the Version resource in the API. Example, "v1".
func (r *StandardAppVersion) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// If set to `true`, the application version will not be deleted.
func (r *StandardAppVersion) NoopOnDestroy() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["noopOnDestroy"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *StandardAppVersion) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// Desired runtime. Example python27.
func (r *StandardAppVersion) Runtime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["runtime"])
}

// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
// https://cloud.google.com/appengine/docs/standard//config/appref
func (r *StandardAppVersion) RuntimeApiVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["runtimeApiVersion"])
}

// AppEngine service resource
func (r *StandardAppVersion) Service() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["service"])
}

// Whether multiple requests can be dispatched to this version at once.
func (r *StandardAppVersion) Threadsafe() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["threadsafe"])
}

// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
// numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
func (r *StandardAppVersion) VersionId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["versionId"])
}

// Input properties used for looking up and filtering StandardAppVersion resources.
type StandardAppVersionState struct {
	// If set to `true`, the service will be deleted if it is the last version.    
	DeleteServiceOnDestroy interface{}
	// Code and application artifacts that make up this version.
	Deployment interface{}
	// The entrypoint for the application.
	Entrypoint interface{}
	// Environment variables available to the application.
	EnvVariables interface{}
	// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles
	// the request and other request handlers are not attempted.
	Handlers interface{}
	// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
	// AutomaticScaling is supported at the moment)
	InstanceClass interface{}
	// Configuration for third-party Python runtime libraries that are required by the application.
	Libraries interface{}
	// Full path to the Version resource in the API. Example, "v1".
	Name interface{}
	// If set to `true`, the application version will not be deleted.
	NoopOnDestroy interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// Desired runtime. Example python27.
	Runtime interface{}
	// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
	// https://cloud.google.com/appengine/docs/standard//config/appref
	RuntimeApiVersion interface{}
	// AppEngine service resource
	Service interface{}
	// Whether multiple requests can be dispatched to this version at once.
	Threadsafe interface{}
	// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
	// numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
	VersionId interface{}
}

// The set of arguments for constructing a StandardAppVersion resource.
type StandardAppVersionArgs struct {
	// If set to `true`, the service will be deleted if it is the last version.    
	DeleteServiceOnDestroy interface{}
	// Code and application artifacts that make up this version.
	Deployment interface{}
	// The entrypoint for the application.
	Entrypoint interface{}
	// Environment variables available to the application.
	EnvVariables interface{}
	// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles
	// the request and other request handlers are not attempted.
	Handlers interface{}
	// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
	// AutomaticScaling is supported at the moment)
	InstanceClass interface{}
	// Configuration for third-party Python runtime libraries that are required by the application.
	Libraries interface{}
	// If set to `true`, the application version will not be deleted.
	NoopOnDestroy interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// Desired runtime. Example python27.
	Runtime interface{}
	// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
	// https://cloud.google.com/appengine/docs/standard//config/appref
	RuntimeApiVersion interface{}
	// AppEngine service resource
	Service interface{}
	// Whether multiple requests can be dispatched to this version at once.
	Threadsafe interface{}
	// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
	// numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
	VersionId interface{}
}
