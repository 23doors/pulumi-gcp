// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/identity_platform_default_supported_idp_config.html.markdown.
type DefaultSupportedIdpConfig struct {
	s *pulumi.ResourceState
}

// NewDefaultSupportedIdpConfig registers a new resource with the given unique name, arguments, and options.
func NewDefaultSupportedIdpConfig(ctx *pulumi.Context,
	name string, args *DefaultSupportedIdpConfigArgs, opts ...pulumi.ResourceOpt) (*DefaultSupportedIdpConfig, error) {
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.ClientSecret == nil {
		return nil, errors.New("missing required argument 'ClientSecret'")
	}
	if args == nil || args.IdpId == nil {
		return nil, errors.New("missing required argument 'IdpId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clientId"] = nil
		inputs["clientSecret"] = nil
		inputs["enabled"] = nil
		inputs["idpId"] = nil
		inputs["project"] = nil
	} else {
		inputs["clientId"] = args.ClientId
		inputs["clientSecret"] = args.ClientSecret
		inputs["enabled"] = args.Enabled
		inputs["idpId"] = args.IdpId
		inputs["project"] = args.Project
	}
	inputs["name"] = nil
	s, err := ctx.RegisterResource("gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DefaultSupportedIdpConfig{s: s}, nil
}

// GetDefaultSupportedIdpConfig gets an existing DefaultSupportedIdpConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultSupportedIdpConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DefaultSupportedIdpConfigState, opts ...pulumi.ResourceOpt) (*DefaultSupportedIdpConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clientId"] = state.ClientId
		inputs["clientSecret"] = state.ClientSecret
		inputs["enabled"] = state.Enabled
		inputs["idpId"] = state.IdpId
		inputs["name"] = state.Name
		inputs["project"] = state.Project
	}
	s, err := ctx.ReadResource("gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DefaultSupportedIdpConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DefaultSupportedIdpConfig) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DefaultSupportedIdpConfig) ID() pulumi.IDOutput {
	return r.s.ID()
}

// OAuth client ID
func (r *DefaultSupportedIdpConfig) ClientId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientId"])
}

// OAuth client secret
func (r *DefaultSupportedIdpConfig) ClientSecret() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientSecret"])
}

// If this IDP allows the user to sign in
func (r *DefaultSupportedIdpConfig) Enabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enabled"])
}

// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
func (r *DefaultSupportedIdpConfig) IdpId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["idpId"])
}

// The name of the DefaultSupportedIdpConfig resource
func (r *DefaultSupportedIdpConfig) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *DefaultSupportedIdpConfig) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// Input properties used for looking up and filtering DefaultSupportedIdpConfig resources.
type DefaultSupportedIdpConfigState struct {
	// OAuth client ID
	ClientId interface{}
	// OAuth client secret
	ClientSecret interface{}
	// If this IDP allows the user to sign in
	Enabled interface{}
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId interface{}
	// The name of the DefaultSupportedIdpConfig resource
	Name interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
}

// The set of arguments for constructing a DefaultSupportedIdpConfig resource.
type DefaultSupportedIdpConfigArgs struct {
	// OAuth client ID
	ClientId interface{}
	// OAuth client secret
	ClientSecret interface{}
	// If this IDP allows the user to sign in
	Enabled interface{}
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
}
