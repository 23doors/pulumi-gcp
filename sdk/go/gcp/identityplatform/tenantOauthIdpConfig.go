// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/identity_platform_tenant_oauth_idp_config.html.markdown.
type TenantOauthIdpConfig struct {
	s *pulumi.ResourceState
}

// NewTenantOauthIdpConfig registers a new resource with the given unique name, arguments, and options.
func NewTenantOauthIdpConfig(ctx *pulumi.Context,
	name string, args *TenantOauthIdpConfigArgs, opts ...pulumi.ResourceOpt) (*TenantOauthIdpConfig, error) {
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil || args.Issuer == nil {
		return nil, errors.New("missing required argument 'Issuer'")
	}
	if args == nil || args.Tenant == nil {
		return nil, errors.New("missing required argument 'Tenant'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clientId"] = nil
		inputs["clientSecret"] = nil
		inputs["displayName"] = nil
		inputs["enabled"] = nil
		inputs["issuer"] = nil
		inputs["name"] = nil
		inputs["project"] = nil
		inputs["tenant"] = nil
	} else {
		inputs["clientId"] = args.ClientId
		inputs["clientSecret"] = args.ClientSecret
		inputs["displayName"] = args.DisplayName
		inputs["enabled"] = args.Enabled
		inputs["issuer"] = args.Issuer
		inputs["name"] = args.Name
		inputs["project"] = args.Project
		inputs["tenant"] = args.Tenant
	}
	s, err := ctx.RegisterResource("gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &TenantOauthIdpConfig{s: s}, nil
}

// GetTenantOauthIdpConfig gets an existing TenantOauthIdpConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenantOauthIdpConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *TenantOauthIdpConfigState, opts ...pulumi.ResourceOpt) (*TenantOauthIdpConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clientId"] = state.ClientId
		inputs["clientSecret"] = state.ClientSecret
		inputs["displayName"] = state.DisplayName
		inputs["enabled"] = state.Enabled
		inputs["issuer"] = state.Issuer
		inputs["name"] = state.Name
		inputs["project"] = state.Project
		inputs["tenant"] = state.Tenant
	}
	s, err := ctx.ReadResource("gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &TenantOauthIdpConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *TenantOauthIdpConfig) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *TenantOauthIdpConfig) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The client id of an OAuth client.
func (r *TenantOauthIdpConfig) ClientId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientId"])
}

// The client secret of the OAuth client, to enable OIDC code flow.
func (r *TenantOauthIdpConfig) ClientSecret() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientSecret"])
}

// Human friendly display name.
func (r *TenantOauthIdpConfig) DisplayName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["displayName"])
}

// If this config allows users to sign in with the provider.
func (r *TenantOauthIdpConfig) Enabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enabled"])
}

// For OIDC Idps, the issuer identifier.
func (r *TenantOauthIdpConfig) Issuer() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["issuer"])
}

// The name of the OauthIdpConfig. Must start with 'oidc.'.
func (r *TenantOauthIdpConfig) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *TenantOauthIdpConfig) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// The name of the tenant where this OIDC IDP configuration resource exists
func (r *TenantOauthIdpConfig) Tenant() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["tenant"])
}

// Input properties used for looking up and filtering TenantOauthIdpConfig resources.
type TenantOauthIdpConfigState struct {
	// The client id of an OAuth client.
	ClientId interface{}
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret interface{}
	// Human friendly display name.
	DisplayName interface{}
	// If this config allows users to sign in with the provider.
	Enabled interface{}
	// For OIDC Idps, the issuer identifier.
	Issuer interface{}
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant interface{}
}

// The set of arguments for constructing a TenantOauthIdpConfig resource.
type TenantOauthIdpConfigArgs struct {
	// The client id of an OAuth client.
	ClientId interface{}
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret interface{}
	// Human friendly display name.
	DisplayName interface{}
	// If this config allows users to sign in with the provider.
	Enabled interface{}
	// For OIDC Idps, the issuer identifier.
	Issuer interface{}
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant interface{}
}
