// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/bigquery_dataset.html.markdown.
type Dataset struct {
	s *pulumi.ResourceState
}

// NewDataset registers a new resource with the given unique name, arguments, and options.
func NewDataset(ctx *pulumi.Context,
	name string, args *DatasetArgs, opts ...pulumi.ResourceOpt) (*Dataset, error) {
	if args == nil || args.DatasetId == nil {
		return nil, errors.New("missing required argument 'DatasetId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accesses"] = nil
		inputs["datasetId"] = nil
		inputs["defaultEncryptionConfiguration"] = nil
		inputs["defaultPartitionExpirationMs"] = nil
		inputs["defaultTableExpirationMs"] = nil
		inputs["deleteContentsOnDestroy"] = nil
		inputs["description"] = nil
		inputs["friendlyName"] = nil
		inputs["labels"] = nil
		inputs["location"] = nil
		inputs["project"] = nil
	} else {
		inputs["accesses"] = args.Accesses
		inputs["datasetId"] = args.DatasetId
		inputs["defaultEncryptionConfiguration"] = args.DefaultEncryptionConfiguration
		inputs["defaultPartitionExpirationMs"] = args.DefaultPartitionExpirationMs
		inputs["defaultTableExpirationMs"] = args.DefaultTableExpirationMs
		inputs["deleteContentsOnDestroy"] = args.DeleteContentsOnDestroy
		inputs["description"] = args.Description
		inputs["friendlyName"] = args.FriendlyName
		inputs["labels"] = args.Labels
		inputs["location"] = args.Location
		inputs["project"] = args.Project
	}
	inputs["creationTime"] = nil
	inputs["etag"] = nil
	inputs["lastModifiedTime"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:bigquery/dataset:Dataset", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Dataset{s: s}, nil
}

// GetDataset gets an existing Dataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataset(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DatasetState, opts ...pulumi.ResourceOpt) (*Dataset, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accesses"] = state.Accesses
		inputs["creationTime"] = state.CreationTime
		inputs["datasetId"] = state.DatasetId
		inputs["defaultEncryptionConfiguration"] = state.DefaultEncryptionConfiguration
		inputs["defaultPartitionExpirationMs"] = state.DefaultPartitionExpirationMs
		inputs["defaultTableExpirationMs"] = state.DefaultTableExpirationMs
		inputs["deleteContentsOnDestroy"] = state.DeleteContentsOnDestroy
		inputs["description"] = state.Description
		inputs["etag"] = state.Etag
		inputs["friendlyName"] = state.FriendlyName
		inputs["labels"] = state.Labels
		inputs["lastModifiedTime"] = state.LastModifiedTime
		inputs["location"] = state.Location
		inputs["project"] = state.Project
		inputs["selfLink"] = state.SelfLink
	}
	s, err := ctx.ReadResource("gcp:bigquery/dataset:Dataset", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Dataset{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Dataset) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Dataset) ID() pulumi.IDOutput {
	return r.s.ID()
}

// An array of objects that define dataset access for one or more entities.
func (r *Dataset) Accesses() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["accesses"])
}

// The time when this dataset was created, in milliseconds since the epoch.
func (r *Dataset) CreationTime() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["creationTime"])
}

// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or
// underscores (_). The maximum length is 1,024 characters.
func (r *Dataset) DatasetId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["datasetId"])
}

// The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned
// tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the
// key.
func (r *Dataset) DefaultEncryptionConfiguration() pulumi.Output {
	return r.s.State["defaultEncryptionConfiguration"]
}

// The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set,
// all newly-created partitioned tables in the dataset will have an 'expirationMs' property in the 'timePartitioning'
// settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a
// partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of
// 'defaultTableExpirationMs' for partitioned tables: only one of 'defaultTableExpirationMs' and
// 'defaultPartitionExpirationMs' will be used for any new partitioned table. If you provide an explicit
// 'timePartitioning.expirationMs' when creating or updating a partitioned table, that value takes precedence over the
// default partition expiration time indicated by this property.
func (r *Dataset) DefaultPartitionExpirationMs() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["defaultPartitionExpirationMs"])
}

// The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one
// hour). Once this property is set, all newly-created tables in the dataset will have an 'expirationTime' property set to
// the creation time plus the value in this property, and changing the value will only affect new tables, not existing
// ones. When the 'expirationTime' for a given table is reached, that table will be deleted automatically. If a table's
// 'expirationTime' is modified or removed before the table expires, or if you provide an explicit 'expirationTime' when
// creating a table, that value takes precedence over the default expiration time indicated by this property.
func (r *Dataset) DefaultTableExpirationMs() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["defaultTableExpirationMs"])
}

// If set to `true`, delete all the tables in the
// dataset when destroying the resource; otherwise,
// destroying the resource will fail if tables are present.
func (r *Dataset) DeleteContentsOnDestroy() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["deleteContentsOnDestroy"])
}

// A user-friendly description of the dataset
func (r *Dataset) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// A hash of the resource.
func (r *Dataset) Etag() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["etag"])
}

// A descriptive name for the dataset
func (r *Dataset) FriendlyName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["friendlyName"])
}

// The labels associated with this dataset. You can use these to organize and group your datasets
func (r *Dataset) Labels() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["labels"])
}

// The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.
func (r *Dataset) LastModifiedTime() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["lastModifiedTime"])
}

// The geographic location where the dataset should reside. See [official
// docs](https://cloud.google.com/bigquery/docs/dataset-locations). There are two types of locations, regional or
// multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a
// large geographic area, such as the United States, that contains at least two geographic places. Possible regional values
// include: 'asia-east1', 'asia-northeast1', 'asia-southeast1', 'australia-southeast1', 'europe-north1', 'europe-west2' and
// 'us-east4'. Possible multi-regional values: 'EU' and 'US'. The default value is multi-regional location 'US'. Changing
// this forces a new resource to be created.
func (r *Dataset) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *Dataset) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// The URI of the created resource.
func (r *Dataset) SelfLink() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["selfLink"])
}

// Input properties used for looking up and filtering Dataset resources.
type DatasetState struct {
	// An array of objects that define dataset access for one or more entities.
	Accesses interface{}
	// The time when this dataset was created, in milliseconds since the epoch.
	CreationTime interface{}
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or
	// underscores (_). The maximum length is 1,024 characters.
	DatasetId interface{}
	// The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned
	// tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides
	// the key.
	DefaultEncryptionConfiguration interface{}
	// The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set,
	// all newly-created partitioned tables in the dataset will have an 'expirationMs' property in the 'timePartitioning'
	// settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a
	// partition will have an expiration time of its partition time plus this value. Setting this property overrides the use
	// of 'defaultTableExpirationMs' for partitioned tables: only one of 'defaultTableExpirationMs' and
	// 'defaultPartitionExpirationMs' will be used for any new partitioned table. If you provide an explicit
	// 'timePartitioning.expirationMs' when creating or updating a partitioned table, that value takes precedence over the
	// default partition expiration time indicated by this property.
	DefaultPartitionExpirationMs interface{}
	// The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one
	// hour). Once this property is set, all newly-created tables in the dataset will have an 'expirationTime' property set to
	// the creation time plus the value in this property, and changing the value will only affect new tables, not existing
	// ones. When the 'expirationTime' for a given table is reached, that table will be deleted automatically. If a table's
	// 'expirationTime' is modified or removed before the table expires, or if you provide an explicit 'expirationTime' when
	// creating a table, that value takes precedence over the default expiration time indicated by this property.
	DefaultTableExpirationMs interface{}
	// If set to `true`, delete all the tables in the
	// dataset when destroying the resource; otherwise,
	// destroying the resource will fail if tables are present.
	DeleteContentsOnDestroy interface{}
	// A user-friendly description of the dataset
	Description interface{}
	// A hash of the resource.
	Etag interface{}
	// A descriptive name for the dataset
	FriendlyName interface{}
	// The labels associated with this dataset. You can use these to organize and group your datasets
	Labels interface{}
	// The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.
	LastModifiedTime interface{}
	// The geographic location where the dataset should reside. See [official
	// docs](https://cloud.google.com/bigquery/docs/dataset-locations). There are two types of locations, regional or
	// multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a
	// large geographic area, such as the United States, that contains at least two geographic places. Possible regional
	// values include: 'asia-east1', 'asia-northeast1', 'asia-southeast1', 'australia-southeast1', 'europe-north1',
	// 'europe-west2' and 'us-east4'. Possible multi-regional values: 'EU' and 'US'. The default value is multi-regional
	// location 'US'. Changing this forces a new resource to be created.
	Location interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The URI of the created resource.
	SelfLink interface{}
}

// The set of arguments for constructing a Dataset resource.
type DatasetArgs struct {
	// An array of objects that define dataset access for one or more entities.
	Accesses interface{}
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or
	// underscores (_). The maximum length is 1,024 characters.
	DatasetId interface{}
	// The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned
	// tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides
	// the key.
	DefaultEncryptionConfiguration interface{}
	// The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set,
	// all newly-created partitioned tables in the dataset will have an 'expirationMs' property in the 'timePartitioning'
	// settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a
	// partition will have an expiration time of its partition time plus this value. Setting this property overrides the use
	// of 'defaultTableExpirationMs' for partitioned tables: only one of 'defaultTableExpirationMs' and
	// 'defaultPartitionExpirationMs' will be used for any new partitioned table. If you provide an explicit
	// 'timePartitioning.expirationMs' when creating or updating a partitioned table, that value takes precedence over the
	// default partition expiration time indicated by this property.
	DefaultPartitionExpirationMs interface{}
	// The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one
	// hour). Once this property is set, all newly-created tables in the dataset will have an 'expirationTime' property set to
	// the creation time plus the value in this property, and changing the value will only affect new tables, not existing
	// ones. When the 'expirationTime' for a given table is reached, that table will be deleted automatically. If a table's
	// 'expirationTime' is modified or removed before the table expires, or if you provide an explicit 'expirationTime' when
	// creating a table, that value takes precedence over the default expiration time indicated by this property.
	DefaultTableExpirationMs interface{}
	// If set to `true`, delete all the tables in the
	// dataset when destroying the resource; otherwise,
	// destroying the resource will fail if tables are present.
	DeleteContentsOnDestroy interface{}
	// A user-friendly description of the dataset
	Description interface{}
	// A descriptive name for the dataset
	FriendlyName interface{}
	// The labels associated with this dataset. You can use these to organize and group your datasets
	Labels interface{}
	// The geographic location where the dataset should reside. See [official
	// docs](https://cloud.google.com/bigquery/docs/dataset-locations). There are two types of locations, regional or
	// multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a
	// large geographic area, such as the United States, that contains at least two geographic places. Possible regional
	// values include: 'asia-east1', 'asia-northeast1', 'asia-southeast1', 'australia-southeast1', 'europe-north1',
	// 'europe-west2' and 'us-east4'. Possible multi-regional values: 'EU' and 'US'. The default value is multi-regional
	// location 'US'. Changing this forces a new resource to be created.
	Location interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
}
