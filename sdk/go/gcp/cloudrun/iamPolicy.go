// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudrun

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/cloud_run_service_iam_policy.html.markdown.
type IamPolicy struct {
	s *pulumi.ResourceState
}

// NewIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIamPolicy(ctx *pulumi.Context,
	name string, args *IamPolicyArgs, opts ...pulumi.ResourceOpt) (*IamPolicy, error) {
	if args == nil || args.PolicyData == nil {
		return nil, errors.New("missing required argument 'PolicyData'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["policyData"] = nil
		inputs["project"] = nil
		inputs["service"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["policyData"] = args.PolicyData
		inputs["project"] = args.Project
		inputs["service"] = args.Service
	}
	inputs["etag"] = nil
	s, err := ctx.RegisterResource("gcp:cloudrun/iamPolicy:IamPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IamPolicy{s: s}, nil
}

// GetIamPolicy gets an existing IamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IamPolicyState, opts ...pulumi.ResourceOpt) (*IamPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["etag"] = state.Etag
		inputs["location"] = state.Location
		inputs["policyData"] = state.PolicyData
		inputs["project"] = state.Project
		inputs["service"] = state.Service
	}
	s, err := ctx.ReadResource("gcp:cloudrun/iamPolicy:IamPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IamPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IamPolicy) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IamPolicy) ID() pulumi.IDOutput {
	return r.s.ID()
}

// (Computed) The etag of the IAM policy.
func (r *IamPolicy) Etag() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["etag"])
}

// The location of the cloud run instance. eg us-central1 Used to find the parent resource to bind the IAM policy to
func (r *IamPolicy) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (r *IamPolicy) PolicyData() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["policyData"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (r *IamPolicy) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// Used to find the parent resource to bind the IAM policy to
func (r *IamPolicy) Service() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["service"])
}

// Input properties used for looking up and filtering IamPolicy resources.
type IamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag interface{}
	// The location of the cloud run instance. eg us-central1 Used to find the parent resource to bind the IAM policy to
	Location interface{}
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project interface{}
	// Used to find the parent resource to bind the IAM policy to
	Service interface{}
}

// The set of arguments for constructing a IamPolicy resource.
type IamPolicyArgs struct {
	// The location of the cloud run instance. eg us-central1 Used to find the parent resource to bind the IAM policy to
	Location interface{}
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project interface{}
	// Used to find the parent resource to bind the IAM policy to
	Service interface{}
}
