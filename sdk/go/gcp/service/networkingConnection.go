// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package service

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type NetworkingConnection struct {
	s *pulumi.ResourceState
}

// NewNetworkingConnection registers a new resource with the given unique name, arguments, and options.
func NewNetworkingConnection(ctx *pulumi.Context,
	name string, args *NetworkingConnectionArgs, opts ...pulumi.ResourceOpt) (*NetworkingConnection, error) {
	if args == nil || args.Network == nil {
		return nil, errors.New("missing required argument 'Network'")
	}
	if args == nil || args.ReservedPeeringRanges == nil {
		return nil, errors.New("missing required argument 'ReservedPeeringRanges'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["network"] = nil
		inputs["reservedPeeringRanges"] = nil
		inputs["service"] = nil
	} else {
		inputs["network"] = args.Network
		inputs["reservedPeeringRanges"] = args.ReservedPeeringRanges
		inputs["service"] = args.Service
	}
	s, err := ctx.RegisterResource("gcp:service/networkingConnection:NetworkingConnection", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkingConnection{s: s}, nil
}

// GetNetworkingConnection gets an existing NetworkingConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkingConnection(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkingConnectionState, opts ...pulumi.ResourceOpt) (*NetworkingConnection, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["network"] = state.Network
		inputs["reservedPeeringRanges"] = state.ReservedPeeringRanges
		inputs["service"] = state.Service
	}
	s, err := ctx.ReadResource("gcp:service/networkingConnection:NetworkingConnection", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkingConnection{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NetworkingConnection) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NetworkingConnection) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *NetworkingConnection) Network() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["network"])
}

func (r *NetworkingConnection) ReservedPeeringRanges() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["reservedPeeringRanges"])
}

func (r *NetworkingConnection) Service() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["service"])
}

// Input properties used for looking up and filtering NetworkingConnection resources.
type NetworkingConnectionState struct {
	Network interface{}
	ReservedPeeringRanges interface{}
	Service interface{}
}

// The set of arguments for constructing a NetworkingConnection resource.
type NetworkingConnectionArgs struct {
	Network interface{}
	ReservedPeeringRanges interface{}
	Service interface{}
}
