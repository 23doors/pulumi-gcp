// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_ssl_policy.html.markdown.
type SSLPolicy struct {
	s *pulumi.ResourceState
}

// NewSSLPolicy registers a new resource with the given unique name, arguments, and options.
func NewSSLPolicy(ctx *pulumi.Context,
	name string, args *SSLPolicyArgs, opts ...pulumi.ResourceOpt) (*SSLPolicy, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["customFeatures"] = nil
		inputs["description"] = nil
		inputs["minTlsVersion"] = nil
		inputs["name"] = nil
		inputs["profile"] = nil
		inputs["project"] = nil
	} else {
		inputs["customFeatures"] = args.CustomFeatures
		inputs["description"] = args.Description
		inputs["minTlsVersion"] = args.MinTlsVersion
		inputs["name"] = args.Name
		inputs["profile"] = args.Profile
		inputs["project"] = args.Project
	}
	inputs["creationTimestamp"] = nil
	inputs["enabledFeatures"] = nil
	inputs["fingerprint"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/sSLPolicy:SSLPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SSLPolicy{s: s}, nil
}

// GetSSLPolicy gets an existing SSLPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSSLPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SSLPolicyState, opts ...pulumi.ResourceOpt) (*SSLPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["creationTimestamp"] = state.CreationTimestamp
		inputs["customFeatures"] = state.CustomFeatures
		inputs["description"] = state.Description
		inputs["enabledFeatures"] = state.EnabledFeatures
		inputs["fingerprint"] = state.Fingerprint
		inputs["minTlsVersion"] = state.MinTlsVersion
		inputs["name"] = state.Name
		inputs["profile"] = state.Profile
		inputs["project"] = state.Project
		inputs["selfLink"] = state.SelfLink
	}
	s, err := ctx.ReadResource("gcp:compute/sSLPolicy:SSLPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SSLPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SSLPolicy) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SSLPolicy) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Creation timestamp in RFC3339 text format.
func (r *SSLPolicy) CreationTimestamp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["creationTimestamp"])
}

// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
// must be specified in the 'customFeatures' field. See the [official
// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for which
// ciphers are available to use. **Note**: this argument *must* be present when using the 'CUSTOM' profile. This argument
// *must not* be present when using any other profile.
func (r *SSLPolicy) CustomFeatures() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["customFeatures"])
}

// An optional description of this resource.
func (r *SSLPolicy) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The list of features enabled in the SSL policy.
func (r *SSLPolicy) EnabledFeatures() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["enabledFeatures"])
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
func (r *SSLPolicy) Fingerprint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["fingerprint"])
}

// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer.
// This can be one of 'TLS_1_0', 'TLS_1_1', 'TLS_1_2'. Default is 'TLS_1_0'.
func (r *SSLPolicy) MinTlsVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["minTlsVersion"])
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (r *SSLPolicy) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
// must be specified in the 'customFeatures' field. See the [official
// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for information
// on what cipher suites each profile provides. If 'CUSTOM' is used, the 'custom_features' attribute **must be set**.
// Default is 'COMPATIBLE'.
func (r *SSLPolicy) Profile() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["profile"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *SSLPolicy) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// The URI of the created resource.
func (r *SSLPolicy) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

// Input properties used for looking up and filtering SSLPolicy resources.
type SSLPolicyState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp interface{}
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
	// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
	// must be specified in the 'customFeatures' field. See the [official
	// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for which
	// ciphers are available to use. **Note**: this argument *must* be present when using the 'CUSTOM' profile. This argument
	// *must not* be present when using any other profile.
	CustomFeatures interface{}
	// An optional description of this resource.
	Description interface{}
	// The list of features enabled in the SSL policy.
	EnabledFeatures interface{}
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint interface{}
	// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer.
	// This can be one of 'TLS_1_0', 'TLS_1_1', 'TLS_1_2'. Default is 'TLS_1_0'.
	MinTlsVersion interface{}
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name interface{}
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
	// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
	// must be specified in the 'customFeatures' field. See the [official
	// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for information
	// on what cipher suites each profile provides. If 'CUSTOM' is used, the 'custom_features' attribute **must be set**.
	// Default is 'COMPATIBLE'.
	Profile interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The URI of the created resource.
	SelfLink interface{}
}

// The set of arguments for constructing a SSLPolicy resource.
type SSLPolicyArgs struct {
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
	// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
	// must be specified in the 'customFeatures' field. See the [official
	// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for which
	// ciphers are available to use. **Note**: this argument *must* be present when using the 'CUSTOM' profile. This argument
	// *must not* be present when using any other profile.
	CustomFeatures interface{}
	// An optional description of this resource.
	Description interface{}
	// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer.
	// This can be one of 'TLS_1_0', 'TLS_1_1', 'TLS_1_2'. Default is 'TLS_1_0'.
	MinTlsVersion interface{}
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name interface{}
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This
	// can be one of 'COMPATIBLE', 'MODERN', 'RESTRICTED', or 'CUSTOM'. If using 'CUSTOM', the set of SSL features to enable
	// must be specified in the 'customFeatures' field. See the [official
	// documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport) for information
	// on what cipher suites each profile provides. If 'CUSTOM' is used, the 'custom_features' attribute **must be set**.
	// Default is 'COMPATIBLE'.
	Profile interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
}
