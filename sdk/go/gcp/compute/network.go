// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_network.html.markdown.
type Network struct {
	s *pulumi.ResourceState
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOpt) (*Network, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["autoCreateSubnetworks"] = nil
		inputs["deleteDefaultRoutesOnCreate"] = nil
		inputs["description"] = nil
		inputs["ipv4Range"] = nil
		inputs["name"] = nil
		inputs["project"] = nil
		inputs["routingMode"] = nil
	} else {
		inputs["autoCreateSubnetworks"] = args.AutoCreateSubnetworks
		inputs["deleteDefaultRoutesOnCreate"] = args.DeleteDefaultRoutesOnCreate
		inputs["description"] = args.Description
		inputs["ipv4Range"] = args.Ipv4Range
		inputs["name"] = args.Name
		inputs["project"] = args.Project
		inputs["routingMode"] = args.RoutingMode
	}
	inputs["gatewayIpv4"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/network:Network", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Network{s: s}, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkState, opts ...pulumi.ResourceOpt) (*Network, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["autoCreateSubnetworks"] = state.AutoCreateSubnetworks
		inputs["deleteDefaultRoutesOnCreate"] = state.DeleteDefaultRoutesOnCreate
		inputs["description"] = state.Description
		inputs["gatewayIpv4"] = state.GatewayIpv4
		inputs["ipv4Range"] = state.Ipv4Range
		inputs["name"] = state.Name
		inputs["project"] = state.Project
		inputs["routingMode"] = state.RoutingMode
		inputs["selfLink"] = state.SelfLink
	}
	s, err := ctx.ReadResource("gcp:compute/network:Network", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Network{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Network) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Network) ID() pulumi.IDOutput {
	return r.s.ID()
}

// When set to 'true', the network is created in "auto subnet mode" and it will create a subnet for each region
// automatically across the '10.128.0.0/9' address range. When set to 'false', the network is created in "custom subnet
// mode" so the user can explicitly connect subnetwork resources.
func (r *Network) AutoCreateSubnetworks() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["autoCreateSubnetworks"])
}

// If set to `true`, default routes (`0.0.0.0/0`) will be deleted
// immediately after network creation. Defaults to `false`.
func (r *Network) DeleteDefaultRoutesOnCreate() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["deleteDefaultRoutesOnCreate"])
}

// An optional description of this resource. The resource must be recreated to modify this field.
func (r *Network) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The gateway address for default routing out of the network. This value is selected by GCP.
func (r *Network) GatewayIpv4() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["gatewayIpv4"])
}

// If this field is specified, a deprecated legacy network is created. You will no longer be able to create a legacy
// network on Feb 1, 2020. See the [legacy network docs](https://cloud.google.com/vpc/docs/legacy) for more details. The
// range of internal addresses that are legal on this legacy network. This range is a CIDR specification, for example:
// '192.168.0.0/16'. The resource must be recreated to modify this field.
func (r *Network) Ipv4Range() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ipv4Range"])
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (r *Network) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *Network) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// The network-wide routing mode to use. If set to 'REGIONAL', this network's cloud routers will only advertise routes with
// subnetworks of this network in the same region as the router. If set to 'GLOBAL', this network's cloud routers will
// advertise routes with all subnetworks of this network, across regions.
func (r *Network) RoutingMode() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["routingMode"])
}

// The URI of the created resource.
func (r *Network) SelfLink() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["selfLink"])
}

// Input properties used for looking up and filtering Network resources.
type NetworkState struct {
	// When set to 'true', the network is created in "auto subnet mode" and it will create a subnet for each region
	// automatically across the '10.128.0.0/9' address range. When set to 'false', the network is created in "custom subnet
	// mode" so the user can explicitly connect subnetwork resources.
	AutoCreateSubnetworks interface{}
	// If set to `true`, default routes (`0.0.0.0/0`) will be deleted
	// immediately after network creation. Defaults to `false`.
	DeleteDefaultRoutesOnCreate interface{}
	// An optional description of this resource. The resource must be recreated to modify this field.
	Description interface{}
	// The gateway address for default routing out of the network. This value is selected by GCP.
	GatewayIpv4 interface{}
	// If this field is specified, a deprecated legacy network is created. You will no longer be able to create a legacy
	// network on Feb 1, 2020. See the [legacy network docs](https://cloud.google.com/vpc/docs/legacy) for more details. The
	// range of internal addresses that are legal on this legacy network. This range is a CIDR specification, for example:
	// '192.168.0.0/16'. The resource must be recreated to modify this field.
	Ipv4Range interface{}
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The network-wide routing mode to use. If set to 'REGIONAL', this network's cloud routers will only advertise routes
	// with subnetworks of this network in the same region as the router. If set to 'GLOBAL', this network's cloud routers
	// will advertise routes with all subnetworks of this network, across regions.
	RoutingMode interface{}
	// The URI of the created resource.
	SelfLink interface{}
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// When set to 'true', the network is created in "auto subnet mode" and it will create a subnet for each region
	// automatically across the '10.128.0.0/9' address range. When set to 'false', the network is created in "custom subnet
	// mode" so the user can explicitly connect subnetwork resources.
	AutoCreateSubnetworks interface{}
	// If set to `true`, default routes (`0.0.0.0/0`) will be deleted
	// immediately after network creation. Defaults to `false`.
	DeleteDefaultRoutesOnCreate interface{}
	// An optional description of this resource. The resource must be recreated to modify this field.
	Description interface{}
	// If this field is specified, a deprecated legacy network is created. You will no longer be able to create a legacy
	// network on Feb 1, 2020. See the [legacy network docs](https://cloud.google.com/vpc/docs/legacy) for more details. The
	// range of internal addresses that are legal on this legacy network. This range is a CIDR specification, for example:
	// '192.168.0.0/16'. The resource must be recreated to modify this field.
	Ipv4Range interface{}
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The network-wide routing mode to use. If set to 'REGIONAL', this network's cloud routers will only advertise routes
	// with subnetworks of this network in the same region as the router. If set to 'GLOBAL', this network's cloud routers
	// will advertise routes with all subnetworks of this network, across regions.
	RoutingMode interface{}
}
