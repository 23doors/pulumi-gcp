// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RouterPeer struct {
	s *pulumi.ResourceState
}

// NewRouterPeer registers a new resource with the given unique name, arguments, and options.
func NewRouterPeer(ctx *pulumi.Context,
	name string, args *RouterPeerArgs, opts ...pulumi.ResourceOpt) (*RouterPeer, error) {
	if args == nil || args.Interface == nil {
		return nil, errors.New("missing required argument 'Interface'")
	}
	if args == nil || args.PeerAsn == nil {
		return nil, errors.New("missing required argument 'PeerAsn'")
	}
	if args == nil || args.PeerIpAddress == nil {
		return nil, errors.New("missing required argument 'PeerIpAddress'")
	}
	if args == nil || args.Router == nil {
		return nil, errors.New("missing required argument 'Router'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["advertiseMode"] = nil
		inputs["advertisedGroups"] = nil
		inputs["advertisedIpRanges"] = nil
		inputs["advertisedRoutePriority"] = nil
		inputs["interface"] = nil
		inputs["name"] = nil
		inputs["peerAsn"] = nil
		inputs["peerIpAddress"] = nil
		inputs["project"] = nil
		inputs["region"] = nil
		inputs["router"] = nil
	} else {
		inputs["advertiseMode"] = args.AdvertiseMode
		inputs["advertisedGroups"] = args.AdvertisedGroups
		inputs["advertisedIpRanges"] = args.AdvertisedIpRanges
		inputs["advertisedRoutePriority"] = args.AdvertisedRoutePriority
		inputs["interface"] = args.Interface
		inputs["name"] = args.Name
		inputs["peerAsn"] = args.PeerAsn
		inputs["peerIpAddress"] = args.PeerIpAddress
		inputs["project"] = args.Project
		inputs["region"] = args.Region
		inputs["router"] = args.Router
	}
	inputs["ipAddress"] = nil
	inputs["managementType"] = nil
	s, err := ctx.RegisterResource("gcp:compute/routerPeer:RouterPeer", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouterPeer{s: s}, nil
}

// GetRouterPeer gets an existing RouterPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterPeer(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RouterPeerState, opts ...pulumi.ResourceOpt) (*RouterPeer, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["advertiseMode"] = state.AdvertiseMode
		inputs["advertisedGroups"] = state.AdvertisedGroups
		inputs["advertisedIpRanges"] = state.AdvertisedIpRanges
		inputs["advertisedRoutePriority"] = state.AdvertisedRoutePriority
		inputs["interface"] = state.Interface
		inputs["ipAddress"] = state.IpAddress
		inputs["managementType"] = state.ManagementType
		inputs["name"] = state.Name
		inputs["peerAsn"] = state.PeerAsn
		inputs["peerIpAddress"] = state.PeerIpAddress
		inputs["project"] = state.Project
		inputs["region"] = state.Region
		inputs["router"] = state.Router
	}
	s, err := ctx.ReadResource("gcp:compute/routerPeer:RouterPeer", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouterPeer{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RouterPeer) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RouterPeer) ID() pulumi.IDOutput {
	return r.s.ID()
}

// User-specified flag to indicate which mode to use for advertisement. Valid values of this enum field are: 'DEFAULT',
// 'CUSTOM'
func (r *RouterPeer) AdvertiseMode() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["advertiseMode"])
}

// User-specified list of prefix groups to advertise in custom mode, which can take one of the following options: *
// 'ALL_SUBNETS': Advertises all available subnets, including peer VPC subnets. * 'ALL_VPC_SUBNETS': Advertises the
// router's own VPC subnets. * 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets of the router's VPC network. Note that this
// field can only be populated if advertiseMode is 'CUSTOM' and overrides the list defined for the router (in the "bgp"
// message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no
// custom groups.
func (r *RouterPeer) AdvertisedGroups() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["advertisedGroups"])
}

// User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if
// advertiseMode is 'CUSTOM' and is advertised to all peers of the router. These IP ranges will be advertised in addition
// to any specified groups. Leave this field blank to advertise no custom IP ranges.
func (r *RouterPeer) AdvertisedIpRanges() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["advertisedIpRanges"])
}

// The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the
// routes with the lowest priority value win.
func (r *RouterPeer) AdvertisedRoutePriority() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["advertisedRoutePriority"])
}

// Name of the interface the BGP peer is associated with.
func (r *RouterPeer) Interface() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["interface"])
}

// IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
func (r *RouterPeer) IpAddress() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ipAddress"])
}

// The resource that configures and manages this BGP peer. * 'MANAGED_BY_USER' is the default value and can be managed by
// you or other users * 'MANAGED_BY_ATTACHMENT' is a BGP peer that is configured and managed by Cloud Interconnect,
// specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type
// of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
func (r *RouterPeer) ManagementType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["managementType"])
}

// Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
// 1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must
// be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last
// character, which cannot be a dash.
func (r *RouterPeer) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
func (r *RouterPeer) PeerAsn() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["peerAsn"])
}

// IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
func (r *RouterPeer) PeerIpAddress() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["peerIpAddress"])
}

func (r *RouterPeer) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// Region where the router and BgpPeer reside. If it is not provided, the provider region is used.
func (r *RouterPeer) Region() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["region"])
}

// The name of the Cloud Router in which this BgpPeer will be configured.
func (r *RouterPeer) Router() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["router"])
}

// Input properties used for looking up and filtering RouterPeer resources.
type RouterPeerState struct {
	// User-specified flag to indicate which mode to use for advertisement. Valid values of this enum field are: 'DEFAULT',
	// 'CUSTOM'
	AdvertiseMode interface{}
	// User-specified list of prefix groups to advertise in custom mode, which can take one of the following options: *
	// 'ALL_SUBNETS': Advertises all available subnets, including peer VPC subnets. * 'ALL_VPC_SUBNETS': Advertises the
	// router's own VPC subnets. * 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets of the router's VPC network. Note that this
	// field can only be populated if advertiseMode is 'CUSTOM' and overrides the list defined for the router (in the "bgp"
	// message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no
	// custom groups.
	AdvertisedGroups interface{}
	// User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if
	// advertiseMode is 'CUSTOM' and is advertised to all peers of the router. These IP ranges will be advertised in addition
	// to any specified groups. Leave this field blank to advertise no custom IP ranges.
	AdvertisedIpRanges interface{}
	// The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the
	// routes with the lowest priority value win.
	AdvertisedRoutePriority interface{}
	// Name of the interface the BGP peer is associated with.
	Interface interface{}
	// IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
	IpAddress interface{}
	// The resource that configures and manages this BGP peer. * 'MANAGED_BY_USER' is the default value and can be managed by
	// you or other users * 'MANAGED_BY_ATTACHMENT' is a BGP peer that is configured and managed by Cloud Interconnect,
	// specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type
	// of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
	ManagementType interface{}
	// Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must
	// be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name interface{}
	// Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
	PeerAsn interface{}
	// IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
	PeerIpAddress interface{}
	Project interface{}
	// Region where the router and BgpPeer reside. If it is not provided, the provider region is used.
	Region interface{}
	// The name of the Cloud Router in which this BgpPeer will be configured.
	Router interface{}
}

// The set of arguments for constructing a RouterPeer resource.
type RouterPeerArgs struct {
	// User-specified flag to indicate which mode to use for advertisement. Valid values of this enum field are: 'DEFAULT',
	// 'CUSTOM'
	AdvertiseMode interface{}
	// User-specified list of prefix groups to advertise in custom mode, which can take one of the following options: *
	// 'ALL_SUBNETS': Advertises all available subnets, including peer VPC subnets. * 'ALL_VPC_SUBNETS': Advertises the
	// router's own VPC subnets. * 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets of the router's VPC network. Note that this
	// field can only be populated if advertiseMode is 'CUSTOM' and overrides the list defined for the router (in the "bgp"
	// message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no
	// custom groups.
	AdvertisedGroups interface{}
	// User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if
	// advertiseMode is 'CUSTOM' and is advertised to all peers of the router. These IP ranges will be advertised in addition
	// to any specified groups. Leave this field blank to advertise no custom IP ranges.
	AdvertisedIpRanges interface{}
	// The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the
	// routes with the lowest priority value win.
	AdvertisedRoutePriority interface{}
	// Name of the interface the BGP peer is associated with.
	Interface interface{}
	// Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must
	// be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name interface{}
	// Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
	PeerAsn interface{}
	// IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
	PeerIpAddress interface{}
	Project interface{}
	// Region where the router and BgpPeer reside. If it is not provided, the provider region is used.
	Region interface{}
	// The name of the Cloud Router in which this BgpPeer will be configured.
	Router interface{}
}
