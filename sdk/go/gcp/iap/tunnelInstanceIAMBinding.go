// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package iap

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TunnelInstanceIAMBinding struct {
	pulumi.CustomResourceState

	Condition TunnelInstanceIAMBindingConditionPtrOutput `pulumi:"condition"`
	Etag pulumi.StringOutput `pulumi:"etag"`
	Instance pulumi.StringOutput `pulumi:"instance"`
	Members pulumi.StringArrayOutput `pulumi:"members"`
	Project pulumi.StringOutput `pulumi:"project"`
	Role pulumi.StringOutput `pulumi:"role"`
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewTunnelInstanceIAMBinding registers a new resource with the given unique name, arguments, and options.
func NewTunnelInstanceIAMBinding(ctx *pulumi.Context,
	name string, args *TunnelInstanceIAMBindingArgs, opts ...pulumi.ResourceOption) (*TunnelInstanceIAMBinding, error) {
	if args == nil || args.Instance == nil {
		return nil, errors.New("missing required argument 'Instance'")
	}
	if args == nil || args.Members == nil {
		return nil, errors.New("missing required argument 'Members'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil {
		args = &TunnelInstanceIAMBindingArgs{}
	}
	var resource TunnelInstanceIAMBinding
	err := ctx.RegisterResource("gcp:iap/tunnelInstanceIAMBinding:TunnelInstanceIAMBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTunnelInstanceIAMBinding gets an existing TunnelInstanceIAMBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTunnelInstanceIAMBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TunnelInstanceIAMBindingState, opts ...pulumi.ResourceOption) (*TunnelInstanceIAMBinding, error) {
	var resource TunnelInstanceIAMBinding
	err := ctx.ReadResource("gcp:iap/tunnelInstanceIAMBinding:TunnelInstanceIAMBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TunnelInstanceIAMBinding resources.
type tunnelInstanceIAMBindingState struct {
	Condition *TunnelInstanceIAMBindingCondition `pulumi:"condition"`
	Etag *string `pulumi:"etag"`
	Instance *string `pulumi:"instance"`
	Members []string `pulumi:"members"`
	Project *string `pulumi:"project"`
	Role *string `pulumi:"role"`
	Zone *string `pulumi:"zone"`
}

type TunnelInstanceIAMBindingState struct {
	Condition TunnelInstanceIAMBindingConditionPtrInput
	Etag pulumi.StringPtrInput
	Instance pulumi.StringPtrInput
	Members pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	Role pulumi.StringPtrInput
	Zone pulumi.StringPtrInput
}

func (TunnelInstanceIAMBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*tunnelInstanceIAMBindingState)(nil)).Elem()
}

type tunnelInstanceIAMBindingArgs struct {
	Condition *TunnelInstanceIAMBindingCondition `pulumi:"condition"`
	Instance string `pulumi:"instance"`
	Members []string `pulumi:"members"`
	Project *string `pulumi:"project"`
	Role string `pulumi:"role"`
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a TunnelInstanceIAMBinding resource.
type TunnelInstanceIAMBindingArgs struct {
	Condition TunnelInstanceIAMBindingConditionPtrInput
	Instance pulumi.StringInput
	Members pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	Role pulumi.StringInput
	Zone pulumi.StringPtrInput
}

func (TunnelInstanceIAMBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tunnelInstanceIAMBindingArgs)(nil)).Elem()
}

