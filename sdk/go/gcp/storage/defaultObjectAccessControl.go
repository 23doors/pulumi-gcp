// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The DefaultObjectAccessControls resources represent the Access Control
// Lists (ACLs) applied to a new object within a Google Cloud Storage bucket
// when no ACL was provided for that object. ACLs let you specify who has
// access to your bucket contents and to what extent.
// 
// There are two roles that can be assigned to an entity:
// 
// READERs can get an object, though the acl property will not be revealed.
// OWNERs are READERs, and they can get the acl property, update an object,
// and call all objectAccessControls methods on the object. The owner of an
// object is always an OWNER.
// For more information, see Access Control, with the caveat that this API
// uses READER and OWNER instead of READ and FULL_CONTROL.
// 
// 
// To get more information about DefaultObjectAccessControl, see:
// 
// * [API documentation](https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls)
// * How-to Guides
//     * [Official Documentation](https://cloud.google.com/storage/docs/access-control/create-manage-lists)
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/storage_default_object_access_control.html.markdown.
type DefaultObjectAccessControl struct {
	s *pulumi.ResourceState
}

// NewDefaultObjectAccessControl registers a new resource with the given unique name, arguments, and options.
func NewDefaultObjectAccessControl(ctx *pulumi.Context,
	name string, args *DefaultObjectAccessControlArgs, opts ...pulumi.ResourceOpt) (*DefaultObjectAccessControl, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Entity == nil {
		return nil, errors.New("missing required argument 'Entity'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bucket"] = nil
		inputs["entity"] = nil
		inputs["object"] = nil
		inputs["role"] = nil
	} else {
		inputs["bucket"] = args.Bucket
		inputs["entity"] = args.Entity
		inputs["object"] = args.Object
		inputs["role"] = args.Role
	}
	inputs["domain"] = nil
	inputs["email"] = nil
	inputs["entityId"] = nil
	inputs["generation"] = nil
	inputs["projectTeam"] = nil
	s, err := ctx.RegisterResource("gcp:storage/defaultObjectAccessControl:DefaultObjectAccessControl", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DefaultObjectAccessControl{s: s}, nil
}

// GetDefaultObjectAccessControl gets an existing DefaultObjectAccessControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultObjectAccessControl(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DefaultObjectAccessControlState, opts ...pulumi.ResourceOpt) (*DefaultObjectAccessControl, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bucket"] = state.Bucket
		inputs["domain"] = state.Domain
		inputs["email"] = state.Email
		inputs["entity"] = state.Entity
		inputs["entityId"] = state.EntityId
		inputs["generation"] = state.Generation
		inputs["object"] = state.Object
		inputs["projectTeam"] = state.ProjectTeam
		inputs["role"] = state.Role
	}
	s, err := ctx.ReadResource("gcp:storage/defaultObjectAccessControl:DefaultObjectAccessControl", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DefaultObjectAccessControl{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DefaultObjectAccessControl) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DefaultObjectAccessControl) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the bucket.
func (r *DefaultObjectAccessControl) Bucket() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bucket"])
}

// The domain associated with the entity.
func (r *DefaultObjectAccessControl) Domain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domain"])
}

// The email address associated with the entity.
func (r *DefaultObjectAccessControl) Email() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["email"])
}

// The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as
// "user-liz@example.com") * group-{{groupId}} * group-{{email}} (such as "group-example@googlegroups.com") *
// domain-{{domain}} (such as "domain-example.com") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers
func (r *DefaultObjectAccessControl) Entity() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["entity"])
}

// The ID for the entity
func (r *DefaultObjectAccessControl) EntityId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["entityId"])
}

// The content generation of the object, if applied to an object.
func (r *DefaultObjectAccessControl) Generation() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["generation"])
}

// The name of the object, if applied to an object.
func (r *DefaultObjectAccessControl) Object() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["object"])
}

// The project team associated with the entity
func (r *DefaultObjectAccessControl) ProjectTeam() *pulumi.Output {
	return r.s.State["projectTeam"]
}

// The access permission for the entity.
func (r *DefaultObjectAccessControl) Role() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["role"])
}

// Input properties used for looking up and filtering DefaultObjectAccessControl resources.
type DefaultObjectAccessControlState struct {
	// The name of the bucket.
	Bucket interface{}
	// The domain associated with the entity.
	Domain interface{}
	// The email address associated with the entity.
	Email interface{}
	// The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as
	// "user-liz@example.com") * group-{{groupId}} * group-{{email}} (such as "group-example@googlegroups.com") *
	// domain-{{domain}} (such as "domain-example.com") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers
	Entity interface{}
	// The ID for the entity
	EntityId interface{}
	// The content generation of the object, if applied to an object.
	Generation interface{}
	// The name of the object, if applied to an object.
	Object interface{}
	// The project team associated with the entity
	ProjectTeam interface{}
	// The access permission for the entity.
	Role interface{}
}

// The set of arguments for constructing a DefaultObjectAccessControl resource.
type DefaultObjectAccessControlArgs struct {
	// The name of the bucket.
	Bucket interface{}
	// The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as
	// "user-liz@example.com") * group-{{groupId}} * group-{{email}} (such as "group-example@googlegroups.com") *
	// domain-{{domain}} (such as "domain-example.com") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers
	Entity interface{}
	// The name of the object, if applied to an object.
	Object interface{}
	// The access permission for the entity.
	Role interface{}
}
