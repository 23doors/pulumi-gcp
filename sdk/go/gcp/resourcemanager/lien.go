// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// A Lien represents an encumbrance on the actions that can be performed on a resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/resource_manager_lien.html.markdown.
type Lien struct {
	s *pulumi.ResourceState
}

// NewLien registers a new resource with the given unique name, arguments, and options.
func NewLien(ctx *pulumi.Context,
	name string, args *LienArgs, opts ...pulumi.ResourceOpt) (*Lien, error) {
	if args == nil || args.Origin == nil {
		return nil, errors.New("missing required argument 'Origin'")
	}
	if args == nil || args.Parent == nil {
		return nil, errors.New("missing required argument 'Parent'")
	}
	if args == nil || args.Reason == nil {
		return nil, errors.New("missing required argument 'Reason'")
	}
	if args == nil || args.Restrictions == nil {
		return nil, errors.New("missing required argument 'Restrictions'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["origin"] = nil
		inputs["parent"] = nil
		inputs["reason"] = nil
		inputs["restrictions"] = nil
	} else {
		inputs["origin"] = args.Origin
		inputs["parent"] = args.Parent
		inputs["reason"] = args.Reason
		inputs["restrictions"] = args.Restrictions
	}
	inputs["createTime"] = nil
	inputs["name"] = nil
	s, err := ctx.RegisterResource("gcp:resourcemanager/lien:Lien", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Lien{s: s}, nil
}

// GetLien gets an existing Lien resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLien(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LienState, opts ...pulumi.ResourceOpt) (*Lien, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["createTime"] = state.CreateTime
		inputs["name"] = state.Name
		inputs["origin"] = state.Origin
		inputs["parent"] = state.Parent
		inputs["reason"] = state.Reason
		inputs["restrictions"] = state.Restrictions
	}
	s, err := ctx.ReadResource("gcp:resourcemanager/lien:Lien", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Lien{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Lien) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Lien) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Time of creation
func (r *Lien) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

// A system-generated unique identifier for this Lien.
func (r *Lien) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
// Maximum length of 200 characters.
func (r *Lien) Origin() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["origin"])
}

// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
// "projects/my-project-name").
func (r *Lien) Parent() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["parent"])
}

// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
// characters.
func (r *Lien) Reason() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["reason"])
}

// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
func (r *Lien) Restrictions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["restrictions"])
}

// Input properties used for looking up and filtering Lien resources.
type LienState struct {
	// Time of creation
	CreateTime interface{}
	// A system-generated unique identifier for this Lien.
	Name interface{}
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin interface{}
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent interface{}
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason interface{}
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions interface{}
}

// The set of arguments for constructing a Lien resource.
type LienArgs struct {
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin interface{}
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent interface{}
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason interface{}
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions interface{}
}
