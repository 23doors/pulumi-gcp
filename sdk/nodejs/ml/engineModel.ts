// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/ml_engine_model.html.markdown.
 */
export class EngineModel extends pulumi.CustomResource {
    /**
     * Get an existing EngineModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EngineModelState, opts?: pulumi.CustomResourceOptions): EngineModel {
        return new EngineModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:ml/engineModel:EngineModel';

    /**
     * Returns true if the given object is an instance of EngineModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EngineModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EngineModel.__pulumiType;
    }

    public readonly defaultVersion!: pulumi.Output<outputs.ml.EngineModelDefaultVersion | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly onlinePredictionConsoleLogging!: pulumi.Output<boolean | undefined>;
    public readonly onlinePredictionLogging!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    public readonly regions!: pulumi.Output<string | undefined>;

    /**
     * Create a EngineModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EngineModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EngineModelArgs | EngineModelState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as EngineModelState | undefined;
            inputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["onlinePredictionConsoleLogging"] = state ? state.onlinePredictionConsoleLogging : undefined;
            inputs["onlinePredictionLogging"] = state ? state.onlinePredictionLogging : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["regions"] = state ? state.regions : undefined;
        } else {
            const args = argsOrState as EngineModelArgs | undefined;
            inputs["defaultVersion"] = args ? args.defaultVersion : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["onlinePredictionConsoleLogging"] = args ? args.onlinePredictionConsoleLogging : undefined;
            inputs["onlinePredictionLogging"] = args ? args.onlinePredictionLogging : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["regions"] = args ? args.regions : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EngineModel.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EngineModel resources.
 */
export interface EngineModelState {
    readonly defaultVersion?: pulumi.Input<inputs.ml.EngineModelDefaultVersion>;
    readonly description?: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly name?: pulumi.Input<string>;
    readonly onlinePredictionConsoleLogging?: pulumi.Input<boolean>;
    readonly onlinePredictionLogging?: pulumi.Input<boolean>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    readonly regions?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EngineModel resource.
 */
export interface EngineModelArgs {
    readonly defaultVersion?: pulumi.Input<inputs.ml.EngineModelDefaultVersion>;
    readonly description?: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly name?: pulumi.Input<string>;
    readonly onlinePredictionConsoleLogging?: pulumi.Input<boolean>;
    readonly onlinePredictionLogging?: pulumi.Input<boolean>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    readonly regions?: pulumi.Input<string>;
}
