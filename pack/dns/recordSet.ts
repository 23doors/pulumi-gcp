// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class RecordSet extends lumi.NamedResource implements RecordSetArgs {
    public readonly managedZone: string;
    public readonly recordSetName?: string;
    public readonly project?: string;
    public readonly rrdatas: string[];
    public readonly ttl: number;
    public readonly type: string;

    constructor(name: string, args: RecordSetArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.managedZone, "") === undefined) {
            throw new Error("Property argument 'managedZone' is required, but was missing");
        }
        this.managedZone = args.managedZone;
        this.recordSetName = args.recordSetName;
        this.project = args.project;
        if (lumirt.defaultIfComputed(args.rrdatas, "") === undefined) {
            throw new Error("Property argument 'rrdatas' is required, but was missing");
        }
        this.rrdatas = args.rrdatas;
        if (lumirt.defaultIfComputed(args.ttl, "") === undefined) {
            throw new Error("Property argument 'ttl' is required, but was missing");
        }
        this.ttl = args.ttl;
        if (lumirt.defaultIfComputed(args.type, "") === undefined) {
            throw new Error("Property argument 'type' is required, but was missing");
        }
        this.type = args.type;
    }
}

export interface RecordSetArgs {
    readonly managedZone: string;
    readonly recordSetName?: string;
    readonly project?: string;
    readonly rrdatas: string[];
    readonly ttl: number;
    readonly type: string;
}

