// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Firewall extends lumi.NamedResource implements FirewallArgs {
    public readonly allow: { ports?: string[], protocol: string }[];
    public readonly description?: string;
    public readonly firewallName?: string;
    public readonly network: string;
    public readonly project: string;
    public /*out*/ readonly selfLink: string;
    public readonly sourceRanges: string[];
    public readonly sourceTags?: string[];
    public readonly targetTags?: string[];

    constructor(name: string, args: FirewallArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.allow, "") === undefined) {
            throw new Error("Property argument 'allow' is required, but was missing");
        }
        this.allow = args.allow;
        this.description = args.description;
        this.firewallName = args.firewallName;
        if (lumirt.defaultIfComputed(args.network, "") === undefined) {
            throw new Error("Property argument 'network' is required, but was missing");
        }
        this.network = args.network;
        this.project = args.project;
        this.sourceRanges = args.sourceRanges;
        this.sourceTags = args.sourceTags;
        this.targetTags = args.targetTags;
    }
}

export interface FirewallArgs {
    readonly allow: { ports?: string[], protocol: string }[];
    readonly description?: string;
    readonly firewallName?: string;
    readonly network: string;
    readonly project?: string;
    readonly sourceRanges?: string[];
    readonly sourceTags?: string[];
    readonly targetTags?: string[];
}

