// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class TargetHttpsProxy extends lumi.NamedResource implements TargetHttpsProxyArgs {
    public readonly description?: string;
    public /*out*/ readonly proxyId: string;
    public readonly targetHttpsProxyName?: string;
    public readonly project?: string;
    public /*out*/ readonly selfLink: string;
    public readonly sslCertificates: string[];
    public readonly urlMap: string;

    constructor(name: string, args: TargetHttpsProxyArgs) {
        super(name);
        this.description = args.description;
        this.targetHttpsProxyName = args.targetHttpsProxyName;
        this.project = args.project;
        if (lumirt.defaultIfComputed(args.sslCertificates, "") === undefined) {
            throw new Error("Property argument 'sslCertificates' is required, but was missing");
        }
        this.sslCertificates = args.sslCertificates;
        if (lumirt.defaultIfComputed(args.urlMap, "") === undefined) {
            throw new Error("Property argument 'urlMap' is required, but was missing");
        }
        this.urlMap = args.urlMap;
    }
}

export interface TargetHttpsProxyArgs {
    readonly description?: string;
    readonly targetHttpsProxyName?: string;
    readonly project?: string;
    readonly sslCertificates: string[];
    readonly urlMap: string;
}

