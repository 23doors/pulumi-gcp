// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class HealthCheck extends lumi.NamedResource implements HealthCheckArgs {
    public readonly checkIntervalSec?: number;
    public readonly description?: string;
    public readonly healthyThreshold?: number;
    public readonly httpHealthCheck?: { host?: string, port?: number, proxyHeader?: string, requestPath?: string }[];
    public readonly httpsHealthCheck?: { host?: string, port?: number, proxyHeader?: string, requestPath?: string }[];
    public readonly healthCheckName?: string;
    public readonly project: string;
    public /*out*/ readonly selfLink: string;
    public readonly sslHealthCheck?: { port?: number, proxyHeader?: string, request?: string, response?: string }[];
    public readonly tcpHealthCheck?: { port?: number, proxyHeader?: string, request?: string, response?: string }[];
    public readonly timeoutSec?: number;
    public readonly unhealthyThreshold?: number;

    constructor(name: string, args: HealthCheckArgs) {
        super(name);
        this.checkIntervalSec = args.checkIntervalSec;
        this.description = args.description;
        this.healthyThreshold = args.healthyThreshold;
        this.httpHealthCheck = args.httpHealthCheck;
        this.httpsHealthCheck = args.httpsHealthCheck;
        this.healthCheckName = args.healthCheckName;
        this.project = args.project;
        this.sslHealthCheck = args.sslHealthCheck;
        this.tcpHealthCheck = args.tcpHealthCheck;
        this.timeoutSec = args.timeoutSec;
        this.unhealthyThreshold = args.unhealthyThreshold;
    }
}

export interface HealthCheckArgs {
    readonly checkIntervalSec?: number;
    readonly description?: string;
    readonly healthyThreshold?: number;
    readonly httpHealthCheck?: { host?: string, port?: number, proxyHeader?: string, requestPath?: string }[];
    readonly httpsHealthCheck?: { host?: string, port?: number, proxyHeader?: string, requestPath?: string }[];
    readonly healthCheckName?: string;
    readonly project?: string;
    readonly sslHealthCheck?: { port?: number, proxyHeader?: string, request?: string, response?: string }[];
    readonly tcpHealthCheck?: { port?: number, proxyHeader?: string, request?: string, response?: string }[];
    readonly timeoutSec?: number;
    readonly unhealthyThreshold?: number;
}

