// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class GlobalForwardingRule extends lumi.NamedResource implements GlobalForwardingRuleArgs {
    public readonly description?: string;
    public readonly ipAddress: string;
    public readonly ipProtocol: string;
    public readonly globalForwardingRuleName?: string;
    public readonly portRange?: string;
    public readonly project?: string;
    public readonly region?: string;
    public /*out*/ readonly selfLink: string;
    public readonly target: string;

    constructor(name: string, args: GlobalForwardingRuleArgs) {
        super(name);
        this.description = args.description;
        this.ipAddress = args.ipAddress;
        this.ipProtocol = args.ipProtocol;
        this.globalForwardingRuleName = args.globalForwardingRuleName;
        this.portRange = args.portRange;
        this.project = args.project;
        this.region = args.region;
        if (lumirt.defaultIfComputed(args.target, "") === undefined) {
            throw new Error("Property argument 'target' is required, but was missing");
        }
        this.target = args.target;
    }
}

export interface GlobalForwardingRuleArgs {
    readonly description?: string;
    readonly ipAddress?: string;
    readonly ipProtocol?: string;
    readonly globalForwardingRuleName?: string;
    readonly portRange?: string;
    readonly project?: string;
    readonly region?: string;
    readonly target: string;
}

